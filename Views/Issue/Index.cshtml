@{
    ViewData["Title"] = "Issues";
}

@model List<Issue>

@if (TempData["success"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["success"]
    </div>
}

<h1>@ViewData["Title"]</h1>

<a asp-controller="Issue" asp-action="Create" class="btn btn-primary mt-2 mb-4">New Issue</a>
<div class="card p-3 overflow-y-scroll">
    <table class="table m-0 table-bordered">
        <thead>
            <tr>
                <th scope="col">Title</th>
                <th scope="col">Status</th>
                <th scope="col">Description</th>
                <th scope="col" >Created at</th>
                <th scope="col" >Updated at</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Issue obj in Model.OrderBy(u => u.CreatedAt))
            {
                <tr>
                    <td><a asp-controller="Issue" asp-action="Edit" asp-route-id="@obj.Id" class="link-offset-2 link-offset-3-hover link-underline link-underline-opacity-0 link-underline-opacity-75-hover">@obj.Title</a></td>
                    <td>
                        <span class="badge rounded-pill
                        @(obj.Status==Status.OPEN ?"text-bg-danger":
                        obj.Status==Status.IN_PROGESS ? "text-bg-warning":"text-bg-success")">
                        @(obj.Status==Status.IN_PROGESS? "In Progress": obj.Status==Status.OPEN ? "Open":"Closed")
                        </span>
                    </td>
                    <td>@obj.Description</td>
                    <td>@obj.CreatedAt.ToString()</td>
                    <td>@obj.UpdatedAt.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const localTimeElements = document.querySelectorAll(".local-time");

            localTimeElements.forEach(function (element) {
                const utcTime = new Date(element.textContent.trim());
                const localTimeOffset = new Date().getTimezoneOffset();
                const localTime = new Date(utcDate.getTime() - (localTimeOffset * 60000));
                element.textContent = localTime.toUTCString()
            });
        });
    </script>
}